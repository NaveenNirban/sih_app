# Generated by Django 4.1 on 2022-08-22 06:47

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalClassTeachers',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('isActive', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('updatedBy', models.CharField(blank=True, max_length=40, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HodMaster',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('isActive', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('updatedBy', models.CharField(blank=True, max_length=40, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationMaster',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('organization', models.CharField(max_length=255)),
                ('siteUrl', models.URLField(null=True)),
                ('image', models.URLField(null=True)),
                ('isActive', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('updatedBy', models.CharField(blank=True, max_length=40, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Parents',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('isActive', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('updatedBy', models.CharField(blank=True, max_length=40, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StandardMaster',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('isActive', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('updatedBy', models.CharField(blank=True, max_length=40, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subjects',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('isActive', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('updatedBy', models.CharField(blank=True, max_length=40, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TeachersMaster',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('dob', models.DateField()),
                ('doj', models.DateField()),
                ('image', models.CharField(max_length=255)),
                ('isActive', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('updatedBy', models.CharField(blank=True, max_length=40, null=True)),
                ('adminHod', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='admin_portal.hodmaster')),
                ('org', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='admin_portal.organizationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='StudentMaster',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('dob', models.DateField(null=True)),
                ('admissionNo', models.CharField(max_length=255, unique=True)),
                ('isActive', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('updatedBy', models.CharField(blank=True, max_length=40, null=True)),
                ('classDetails', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='admin_portal.standardmaster')),
                ('faculty', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='admin_portal.additionalclassteachers')),
                ('hod', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='admin_portal.hodmaster')),
                ('orgId', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='admin_portal.organizationmaster')),
                ('parents', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='admin_portal.parents')),
            ],
        ),
        migrations.AddField(
            model_name='standardmaster',
            name='classTeacher',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='admin_portal.teachersmaster'),
        ),
        migrations.AddField(
            model_name='standardmaster',
            name='org',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='admin_portal.organizationmaster'),
        ),
        migrations.CreateModel(
            name='QRLibrary',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('isActive', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('owner', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('updatedBy', models.CharField(blank=True, max_length=40, null=True)),
                ('standard', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='admin_portal.standardmaster')),
                ('subject', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='admin_portal.subjects')),
            ],
        ),
        migrations.CreateModel(
            name='LearningMaterial',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('url', models.URLField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('fileType', models.CharField(max_length=255)),
                ('isActive', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('updatedBy', models.CharField(blank=True, max_length=40, null=True)),
                ('standard', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='admin_portal.standardmaster')),
                ('subject', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='admin_portal.subjects')),
            ],
        ),
        migrations.CreateModel(
            name='Homework',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('isActive', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('url', models.URLField(null=True)),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField(blank=True, null=True)),
                ('forDate', models.DateField()),
                ('updatedBy', models.CharField(blank=True, max_length=40, null=True)),
                ('assignedBy', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='admin_portal.teachersmaster')),
                ('standard', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='admin_portal.standardmaster')),
                ('subject', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='admin_portal.subjects')),
            ],
        ),
        migrations.AddField(
            model_name='hodmaster',
            name='org',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='admin_portal.organizationmaster'),
        ),
        migrations.CreateModel(
            name='Complaints',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('isActive', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('toHod', models.BooleanField(default=False)),
                ('toTeacher', models.BooleanField(default=True)),
                ('toMgmt', models.BooleanField(default=False)),
                ('status', models.IntegerField(default=0)),
                ('complaintContent', models.TextField()),
                ('updatedBy', models.CharField(blank=True, max_length=40, null=True)),
                ('hod', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='admin_portal.hodmaster')),
                ('org', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='admin_portal.organizationmaster')),
                ('student', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='admin_portal.studentmaster')),
                ('teacher', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='admin_portal.teachersmaster')),
            ],
        ),
        migrations.CreateModel(
            name='Circular',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('url', models.URLField()),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, max_length=1000, null=True)),
                ('isFor', models.IntegerField()),
                ('isActive', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('updatedBy', models.CharField(blank=True, max_length=40, null=True)),
                ('standard', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='admin_portal.standardmaster')),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('isActive', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('date', models.DateTimeField()),
                ('title', models.CharField(max_length=255)),
                ('updatedBy', models.CharField(blank=True, max_length=40, null=True)),
                ('standard', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='admin_portal.standardmaster')),
                ('student', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='admin_portal.studentmaster')),
                ('teacher', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='admin_portal.teachersmaster')),
            ],
        ),
        migrations.AddField(
            model_name='additionalclassteachers',
            name='subject',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='admin_portal.subjects'),
        ),
        migrations.AddField(
            model_name='additionalclassteachers',
            name='teacher',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='admin_portal.teachersmaster'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=255, unique=True, verbose_name='Email')),
                ('type', models.CharField(choices=[('ORGANIZATION', 'Organization'), ('HOD', 'Hod'), ('TEACHER', 'Teacher'), ('STUDENT', 'Student'), ('PARENT', 'Parent')], max_length=50, verbose_name='Type')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Hod',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('admin_portal.user',),
        ),
        migrations.CreateModel(
            name='Org',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('admin_portal.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('admin_portal.user',),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('admin_portal.user',),
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('admin_portal.user',),
        ),
    ]
